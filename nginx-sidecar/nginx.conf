    events {
      worker_connections 1024;
    }

    http {
      server {
        listen 8080;

        # NGINX will reject anything not matching /api

        location /hello {
          # Set additional headers to preserve request details
          proxy_set_header X-Original-Method $request_method;
          proxy_set_header X-Original-URI $request_uri;
          proxy_set_header X-Original-Query $query_string;

            # Optionally, you can set more headers to preserve other request details
          proxy_set_header X-Original-Remote-Addr $remote_addr;
          proxy_set_header X-Original-Host $host;
          proxy_set_header X-Original-Scheme $scheme;

          proxy_pass_request_headers on;
          proxy_pass_request_body on;
          # Enable buffering for capturing entire response
          proxy_buffering on;
          proxy_pass http://hello-world-service-example:8081/hello;
        }

        # Capture the response from hello service
         location /hello_response {
           proxy_pass http://127.0.0.1:8081/hello;  # Internal communication with hello server
         }

         # Combine request and response (replace with your logic)
          location /combined_request {
                rewrite ^ /hello_response/(.*)$ break;
                rewrite ^ (.+) (.*)$ $1 response=$2;  # Prepend response as key-value pair
              }

            # Forward combined request to backend server
           location /hello {
              proxy_pass http://hello-world-service-example:8081/publish;  # Replace with backend server details
           }


      }
    }