    events {
      worker_connections 1024;
    }

    http {
     log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                               '$status $body_bytes_sent "$http_referer" '
                               '"$http_user_agent" "$http_x_forwarded_for"';

      access_log /var/log/nginx/access.log main;
      error_log /var/log/nginx/error.log debug;

      server {
        listen 8080;

        # NGINX will reject anything not matching /api

        location /hello {
          # Set additional headers to preserve request details
          proxy_pass http://hello-world-service-example:8081/hello;

          proxy_set_header X-Original-Method $request_method;
          proxy_set_header X-Original-URI $request_uri;
          proxy_set_header X-Original-Query $query_string;

            # Optionally, you can set more headers to preserve other request details
          proxy_set_header X-Original-Remote-Addr $remote_addr;
          proxy_set_header X-Original-Host $host;
          proxy_set_header X-Original-Scheme $scheme;

          proxy_pass_request_headers on;
          proxy_pass_request_body on;
          # Enable buffering for capturing entire response
          proxy_buffering on;
           # Rewrite request URI using rewrite module (if installed)
          rewrite ^ /combined_request break;
          }

             # Define location for combining request and response
        location /combined_request {
               # Forward combined request (original request + response) to second upstream
           proxy_pass http://hello-world-service-example:8081/publish;
         }

        }


      }

